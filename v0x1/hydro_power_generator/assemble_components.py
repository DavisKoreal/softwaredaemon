import adsk.core, adsk.fusion, adsk.cam\nfrom turbine_component import create_turbine\nfrom generator_component import create_generator\nfrom housing_component import create_housing\n\ndef assemble_generator():\n    # Create all components\n    turbine_result = create_turbine()\n    generator_result = create_generator()\n    housing_result = create_housing()\n    \n    app = adsk.core.Application.get()\n    design = app.activeProduct\n    rootComp = design.rootComponent\n    \n    # Get all bodies for positioning\n    bodies = rootComp.bRepBodies\n    turbine_body = bodies.item(0)\n    generator_body = bodies.item(1)\n    housing_body = bodies.item(2)\n    \n    # Position components (simplified example)\n    # Move turbine into housing\n    transform = adsk.core.Matrix3D.create()\n    transform.translation = adsk.core.Vector3D.create(0, 0, 5)\n    turbine_body.transform(transform)\n    \n    # Move generator into housing\n    transform = adsk.core.Matrix3D.create()\n    transform.translation = adsk.core.Vector3D.create(0, 0, 8)\n    generator_body.transform(transform)\n    \n    return 'Generator assembly completed successfully'\n\nif __name__ == '__main__':\n    assemble_generator()
