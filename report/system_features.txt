5. System Features\nAgriGuide’s features, as defined in lib/data.ts, streamline crop health management.\n\n5.1 Instant Diagnosis\nFarmers upload crop images via forms validated by addPestFormSchema (lib/schemas.ts). The scanPestImage and scanDiseaseImage actions use OpenAI’s GPT-4o-mini to identify pests/diseases, returning detailed reports (e.g., pest name, damage, treatment).\nReal-World Example: PlantVillage Nuru achieves 93% accuracy for cassava diseases (Axios).\n\n5.2 Expert AI Recommendations\nPost-diagnosis, AI generates tailored advice (e.g., organic controls, pesticide dosages) stored in Prisma (prisma.scan.create).\nReal-World Example: AgriApp in India boosts yields by 20% with similar advice (AgriApp.com).\n\n5.3 Supplier Links\nThe useClientGeolocation hook and app/api/geolocation/route.ts fetch location data to connect farmers to suppliers listed in TEMP_PRODUCT_DATA (e.g., fungicides in Nairobi).\nReal-World Example: eKutir links farmers to suppliers in India (eKutir.in).\n\n5.4 Comprehensive Database\nPrisma stores pest/disease data (prisma.pest.create, prisma.disease.create), accessible via a resource library.\nImplementation: Supabase stores images for scalability.\n\n5.5 User-Friendly Interface\nNext.js ensures a responsive, intuitive UI, with forms validated by Zod schemas (lib/schemas.ts).\nImplementation: React hooks like useHashState enhance UX with error toasts.\n\n5.6 Consultation Services\nIn-app chat (sendMessage) allows farmers to consult agricultural specialists using OpenAI.\nReal-World Example: Darli Chatbot serves 110,000+ farmers via WhatsApp (news.mongabay.com).\n\n5.7 Progress Tracker\nThe trackProgress action compares two scan images to assess disease progression, aiding proactive management.\nImplementation: Uses OpenAI for image analysis.
